"""

Revision ID: 003
Revises: 002
Create Date: 2024-10-27 05:34:03.633043

"""

from typing import Optional, Sequence

import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision: str = "003"
down_revision: Optional[str] = "002"
branch_labels: Optional[Sequence[str]] = None
depends_on: Optional[Sequence[str]] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("feedback", sa.Column("user", sa.BigInteger(), nullable=False))
    op.add_column("feedback", sa.Column("is_helpful", sa.Boolean(), nullable=True))
    op.add_column("feedback", sa.Column("checklist", sa.Text(), nullable=True))
    op.alter_column("feedback", "question", existing_type=sa.TEXT(), nullable=False)
    op.alter_column("feedback", "answer", existing_type=sa.TEXT(), nullable=False)
    op.drop_column("feedback", "user_id")
    op.drop_column("feedback", "rating")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "feedback", sa.Column("rating", sa.BOOLEAN(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "feedback", sa.Column("user_id", sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.alter_column("feedback", "answer", existing_type=sa.TEXT(), nullable=True)
    op.alter_column("feedback", "question", existing_type=sa.TEXT(), nullable=True)
    op.drop_column("feedback", "checklist")
    op.drop_column("feedback", "is_helpful")
    op.drop_column("feedback", "user")
    # ### end Alembic commands ###
